//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScrewTurn.Wiki.Plugins.SqlServer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ScrewTurn.Wiki.Plugins.SqlServer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = &apos;Directory&apos;)
        ///create table [Directory] (
        ///	[Wiki] varchar(100) not null,
        ///	[FullPath] nvarchar(250) not null,
        ///	[Parent] nvarchar(250),
        ///	constraint [PK_Directory] primary key clustered ([Wiki], [FullPath])
        ///)
        ///
        ///if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = &apos;File&apos;)
        ///create table [File] (
        ///	[Wiki] varchar(100) not null,
        ///	[Name] nvarchar(200) not null,
        ///	[Directory] nvarchar(250) not null,
        ///	[Size] bigint not [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FilesDatabase {
            get {
                return ResourceManager.GetString("FilesDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Script for migration from previous version to the new tables
        ///
        ///-- Clear tables to avoid duplicates (in case the migration script was interrupted before)
        ///truncate table [dbo].[File]
        ///truncate table [dbo].[Attachment]
        ///delete from [dbo].[Directory] -- cannot truncate due to FK references
        ///
        ///insert into [dbo].[Directory]
        ///	([Wiki]
        ///	,[FullPath]
        ///	,[Parent])
        ///select 
        ///	&apos;root&apos; as [Wiki]
        ///	,[FullPath]
        ///	,[Parent]
        ///from [dbo].[Directory_v3]
        ///
        ///
        ///insert into [dbo].[File]
        ///	([Wiki]
        ///	,[Name]
        ///	,[Directory]
        ///	,[ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FilesDatabase_3000to4000 {
            get {
                return ResourceManager.GetString("FilesDatabase_3000to4000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///	GlobalSettings is a new component on this version, but the following tables were moved from Settings:
        ///	- Log: a new column &quot;Wiki&quot; was added.
        ///	- PluginAssembly: the columns are the same but the values are not migrated on this script to avoid errors with the assemblies from previous versions.
        ///*/
        ///
        ///if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = &apos;GlobalSetting&apos;)
        ///create table [GlobalSetting] (
        ///	[Name] varchar(100) not null,
        ///	[Value] nvarchar(4000) not null,
        ///	constraint [PK_ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GlobalSettingsDatabase {
            get {
                return ResourceManager.GetString("GlobalSettingsDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = &apos;Namespace&apos;)
        ///create table [Namespace] (
        ///	[Wiki] varchar(100) not null,
        ///	[Name] nvarchar(100) not null,
        ///	[DefaultPage] nvarchar(200),
        ///	constraint [PK_Namespace] primary key clustered ([Wiki], [Name])
        ///)
        ///
        ///if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = &apos;Category&apos;)
        ///create table [Category](
        ///	[Wiki] varchar(100) not null,
        ///	[Name] nvarchar(100) not null,
        ///	[Namespace] nvarchar(100) not null,
        ///	constraint [F [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PagesDatabase {
            get {
                return ResourceManager.GetString("PagesDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Script for migration from previous version to the new tables
        ///
        ///-- Clear tables to avoid duplicates (in case the migration script was interrupted before)
        ///truncate table [dbo].[CategoryBinding]
        ///truncate table [dbo].[PageKeyword]
        ///truncate table [dbo].[Message]
        ///truncate table [dbo].[NavigationPath]
        ///truncate table [dbo].[Snippet]
        ///truncate table [dbo].[ContentTemplate]
        ///-- cannot truncate due to FK references
        ///delete from [dbo].[Category] 
        ///delete from [dbo].[PageContent]
        ///delete from [dbo].[Namespace]        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PagesDatabase_3001to4000 {
            get {
                return ResourceManager.GetString("PagesDatabase_3001to4000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///if (select count([Name]) from [Namespace] where [Name] = &apos;&apos; and [Wiki] = @wiki) = 0
        ///begin
        ///	insert into [Namespace] ([Wiki], [Name], [DefaultPage]) values (@wiki, &apos;&apos;, null)
        ///end
        ///.
        /// </summary>
        internal static string PagesInitNamespaceTableDatabase {
            get {
                return ResourceManager.GetString("PagesInitNamespaceTableDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///	Script to rename a table and all its constraints to a version.
        ///	Does not attempt to rename if the new table name already exists in the database.
        ///	Expects the following parameters to be defined:
        ///		@table nvarchar(128) - Name of the table that will be renamed, example: @table=&apos;Page&apos;
        ///		@suffix nvarchar(10) - Suffix with version number that will append to the object name, example: @suffix=&apos;_v3&apos;
        ///*/
        ///DECLARE @objects as TABLE (
        ///	name nvarchar(128)
        ///)
        ///
        ///IF NOT EXISTS (select TABLE_NAME from INFORMATION [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RenameTable {
            get {
                return ResourceManager.GetString("RenameTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = &apos;SearchIndex&apos;)
        ///create table [SearchIndex] (
        ///	[Wiki] varchar(100) not null,
        ///	[Name] nvarchar(200) not null,
        ///	[Size] bigint not null,
        ///	[LastModified] datetime not null,
        ///	[Data] varbinary(max) not null,
        ///	constraint [PK_SearchIndex] primary key clustered ([Wiki], [Name])
        ///)
        ///
        ///if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = &apos;SearchIndexLock&apos;)
        ///create table [SearchIndexLock] (
        ///    [Wiki] varchar(100) not nul [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SearchIndexDatabase {
            get {
                return ResourceManager.GetString("SearchIndexDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = &apos;Setting&apos;)
        ///create table [Setting] (
        ///	[Wiki] varchar(100) not null,
        ///	[Name] varchar(100) not null,
        ///	[Value] nvarchar(4000) not null,
        ///	constraint [PK_Setting] primary key clustered ([Wiki], [Name])
        ///)
        ///
        ///if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = &apos;MetaDataItem&apos;)
        ///create table [MetaDataItem] (
        ///	[Wiki] varchar(100) not null,
        ///	[Name] varchar(100) not null,
        ///	[Tag] nvarchar(100) not null,
        ///	[Data] nvarcha [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SettingsDatabase {
            get {
                return ResourceManager.GetString("SettingsDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Script for migration from previous version to the new tables
        ///
        ///-- Clear tables to avoid duplicates (in case the migration script was interrupted before)
        ///truncate table [dbo].[Setting]
        ///truncate table [dbo].[MetaDataItem]
        ///truncate table [dbo].[RecentChange]
        ///truncate table [dbo].[PluginStatus]
        ///truncate table [dbo].[OutgoingLink]
        ///truncate table [dbo].[AclEntry]
        ///
        ///insert into [dbo].[Setting]
        ///	([Wiki]
        ///	,[Name]
        ///	,[Value])
        ///select 
        ///	&apos;root&apos; as [Wiki]
        ///	,[Name]
        ///	,[Value]
        ///from [dbo].[Setting_v3]
        ///
        ///in [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SettingsDatabase_3000to4000 {
            get {
                return ResourceManager.GetString("SettingsDatabase_3000to4000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = &apos;User&apos;)
        ///create table [User] (
        ///	[Wiki] varchar(100) not null,
        ///	[Username] nvarchar(100) not null,
        ///	[PasswordHash] varchar(100) not null,
        ///	[DisplayName] nvarchar(150),
        ///	[Email] varchar(100) not null,
        ///	[Active] bit not null,
        ///	[DateTime] datetime not null,
        ///	constraint [PK_User] primary key clustered ([Wiki], [Username])
        ///)
        ///
        ///if not exists(select * from INFORMATION_SCHEMA.TABLES where TABLE_NAME = &apos;UserGroup&apos;)
        ///create table [UserG [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UsersDatabase {
            get {
                return ResourceManager.GetString("UsersDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Script for migration from previous version to the new tables
        ///
        ///-- Clear tables to avoid duplicates (in case the migration script was interrupted before)
        ///truncate table [dbo].[UserGroupMembership]
        ///delete from [dbo].[UserGroup] -- cannot truncate due to FK references
        ///delete from [dbo].[User] -- cannot truncate due to FK references
        ///
        ///truncate table [dbo].[UserData]
        ///
        ///insert into [dbo].[User]
        ///	([Wiki]
        ///	,[Username]
        ///	,[PasswordHash]
        ///	,[DisplayName]
        ///	,[Email]
        ///	,[Active]
        ///	,[DateTime])
        ///select 
        ///	&apos;ro [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UsersDatabase_3000to4000 {
            get {
                return ResourceManager.GetString("UsersDatabase_3000to4000", resourceCulture);
            }
        }
    }
}
